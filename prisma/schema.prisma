generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int           @id @default(autoincrement())
  walletAddress String        @unique
  username      String?
  twitterHandle String?
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  topics        CreateTopic[]
  comments      Comment[]
  invests       Invest[]
}

model CreateTopic {
  id              String    @id
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  investment      BigInt    @default(0)
  promoter        User?     @relation(fields: [promoterId], references: [id])
  promoterId      Int?
  position        Int
  tokenAddress    String
  nonce           String
  transactionHash String
  chainId         String
  comments        Comment[]
  metadata        Metadata?
  invests         Invest[]
}

model Comment {
  id        Int          @id @default(autoincrement())
  content   String
  createdAt DateTime     @default(now())
  updatedAt DateTime     @updatedAt
  author    User?        @relation(fields: [authorId], references: [id])
  authorId  Int?
  topic     CreateTopic? @relation(fields: [topicId], references: [id])
  topicId   String?
}

model Metadata {
  topicId       String      @id
  topic_title   String
  topic_content String
  image_url     String
  topic         CreateTopic @relation(fields: [topicId], references: [id])
}

model EventSync {
  eventName String @id
  lastBlock BigInt
}

model Invest {
  id              Int          @id @default(autoincrement())
  userId          Int?
  topicId         String?
  amount          BigInt
  position        Int
  nonce           String
  user            User?        @relation(fields: [userId], references: [id])
  topic           CreateTopic? @relation(fields: [topicId], references: [id])
  createdAt       DateTime     @default(now())
  updatedAt       DateTime     @updatedAt
  transactionHash String
  chainId         String
}
