generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int           @id @default(autoincrement())
  walletAddress String        @unique
  username      String?
  twitterHandle String?
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  topics        CreateTopic[]
  comments      Comment[]
  invests       Invest[]
}

model Topic {
  id          String       @id
  comments    Comment[]
  metadata    Metadata?
  invests     Invest[]
  createTopic CreateTopic?
}

model CreateTopic {
  id              String   @id
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  investment      BigInt   @default(0)
  promoter        User?    @relation(fields: [promoterId], references: [id])
  promoterId      Int?
  position        Int
  tokenAddress    String
  nonce           String
  transactionHash String
  chainId         String
  topic           Topic    @relation(fields: [id], references: [id])
}

model Metadata {
  topicId      String  @id
  topicTitle   String
  topicContent String
  imageUrl     String?
  topicHash    String
  topic        Topic   @relation(fields: [topicId], references: [id])
}

model Comment {
  id        Int      @id @default(autoincrement())
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  author    User?    @relation(fields: [authorId], references: [id])
  authorId  Int?
  topic     Topic?   @relation(fields: [topicId], references: [id])
  topicId   String?
}

model EventSync {
  eventName String @id
  lastBlock BigInt
}

model Invest {
  id              Int      @id @default(autoincrement())
  userId          Int?
  topicId         String?
  amount          BigInt
  position        Int
  nonce           String
  user            User?    @relation(fields: [userId], references: [id])
  topic           Topic?   @relation(fields: [topicId], references: [id])
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  transactionHash String
  chainId         String
}
